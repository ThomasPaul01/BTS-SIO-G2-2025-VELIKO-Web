{% extends 'base.html.twig' %}

{% block title %}VELIKO{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />

    <style>
        #map {
            height: 500px;
            width: 100%;
        }
    </style>
{% endblock %}

{% block content %}
    <p>Connected as: {{ userEmail }}</p>
    <div id="map"></div>
{% endblock %}

{% block javascripts %}
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>
    <script>
        function initMap() {
            console.log('Initializing map...');

            // Initialisation de la carte
            var map = L.map('map').setView([48.8566, 2.3522], 12);

            L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                attribution: 'Données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                minZoom: 1,
                maxZoom: 20
            }).addTo(map);

            // Initialisation de la géolocalisation User
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var userLat = position.coords.latitude;
                    var userLon = position.coords.longitude;

                    map.setView([userLat, userLon], 14);

                    L.marker([userLat, userLon]).addTo(map)
                        .bindPopup("Vous êtes ici").openPopup();

                }, function(error) {
                    console.error('Geolocation error: ' + error.message);
                });
            } else {
                console.error("Geolocation is not supported by this browser.");
            }

            var markers = L.markerClusterGroup();
            var stations = {{ stations|json_encode()|raw }};

            // Afficher Station et Information sur celle-ci
            if (Array.isArray(stations)) {
                stations.forEach(function(station) {

                    var marker = L.marker([station.lat, station.lon])
                        .bindPopup(
                            "Nom : " + station.name +
                            "<br>Capacité : " + station.capacity +
                            "<br>Vélos mécaniques disponibles : " + station.mechanical_bikes +
                            "<br>Vélos électriques disponibles : " + station.electric_bikes
                        );


                    // Afficher info durant un survol
                    marker.on('mouseover', function() {
                        marker.bindPopup(
                            "Nom : " + station.name +
                            "<br>Capacité : " + station.capacity +
                            "<br>Vélos mécaniques disponibles : " + station.mechanical_bikes +
                            "<br>Vélos électriques disponibles : " + station.electric_bikes+
                            "<br><button onclick='addToFavorites(" + station.id + ")'>Ajouter aux favoris</button>"
                        ).openPopup();
                        });

                        // Groupe Marqueur
                        markers.addLayer(marker);

                    });
            } else {
                console.error("Les données des stations ne sont pas sous forme de tableau.");
            }

            // Ajouter le groupe de marqueurs à la carte
            map.addLayer(markers);
        }
        function addToFavorites(stationId) {
            alert(stationId)
            fetch(`/add-favorite/${stationId}`, { method: 'POST' })
                .then(response => {
                    if (response.ok) {
                        alert('Station ajoutée aux favoris !');
                    } else {
                        alert('Erreur lors de l\'ajout aux favoris.');
                    }
                })
                .catch(error => console.error('Erreur:', error));
        }


        window.onload = initMap;
    </script>
{% endblock %}