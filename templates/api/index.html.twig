{% extends 'base.html.twig' %}

{% block title %}VELIKO{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />

    <style>
        #map {
            height: 500px;
            width: 100%;
        }
    </style>
{% endblock %}

{% block content %}
    {% if app.user %}
        <div class="text-muted text-center mb-3 small">
            Connecté en tant que : <strong>{{ app.user.userIdentifier }}</strong>
        </div>
    {% endif %}
    <div id="message" style="display:none; padding: 10px; margin: 10px 0; border-radius: 5px;"></div>
    <div id="map"></div>
{% endblock %}

{% block javascripts %}
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>
    <script>
        function initMap() {
            console.log('Initialisation de la carte...');

            // Initialisation de la carte
            var map = L.map('map').setView([48.8566, 2.3522], 12);

            L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                attribution: 'Données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                minZoom: 1,
                maxZoom: 20
            }).addTo(map);

            // Initialisation de la géolocalisation User
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var userLat = position.coords.latitude;
                    var userLon = position.coords.longitude;

                    map.setView([userLat, userLon], 14);

                    L.marker([userLat, userLon]).addTo(map)
                        .bindPopup("Vous êtes ici").openPopup();

                }, function(error) {
                    console.error('Geolocation error: ' + error.message);
                });
            } else {
                console.error("Geolocation is not supported by this browser.");
            }

            var markers = L.markerClusterGroup();
            var stations = {{ stations|json_encode()|raw }};

            // Afficher Station et Information sur celle-ci

            if (Array.isArray(stations)) {
                stations.forEach(function(station) {
                    // Verifier si Favoris et mettre les informations en fonction
                    var isFavorite = station.is_favorite;
                    var buttonId = 'favorite-btn-' + station.station_id;
                    var buttonLabel = isFavorite ? 'Supprimer des favoris' : 'Ajouter aux favoris';
                    var icon = isFavorite ? '⭐' : '☆';
                    var buttonAction = isFavorite ? 'removeFromFavorites' : 'addToFavorites';

                    var marker = L.marker([station.lat, station.lon])
                        .bindPopup(
                            "Nom : " + station.name +
                            "<br>Capacité : " + station.capacity +
                            "<br>Vélos mécaniques disponibles : " + station.mechanical_bikes +
                            "<br>Vélos électriques disponibles : " + station.electric_bikes +
                            `<br><span id='icon-${station.station_id}'>${icon}</span> <button id="${buttonId}" onclick="${buttonAction}(${station.station_id})">${buttonLabel}</button>`
                        );

                    // Afficher info durant un survol
                    marker.on('mouseover', function() {
                        marker.bindPopup(
                            "Nom : " + station.name +
                            "<br>Capacité : " + station.capacity +
                            "<br>Vélos mécaniques disponibles : " + station.mechanical_bikes +
                            "<br>Vélos électriques disponibles : " + station.electric_bikes +
                            `<br><span id='icon-${station.station_id}'>${icon}</span> <button id="${buttonId}" onclick="${buttonAction}(${station.station_id})">${buttonLabel}</button>`
                        ).openPopup();
                    });

                    markers.addLayer(marker);
                });
            }
            else {
                console.error("Les données des stations ne sont pas sous forme de tableau.");
            }


            // Ajouter le groupe de marqueurs à la carte
            map.addLayer(markers);
        }

        //Ajouter la Station en favorite avec son id
        function addToFavorites(stationId) {
            fetch(`/user/add-favorite/${stationId}`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.type === 'success') {
                        const button = document.getElementById('favorite-btn-' + stationId);
                        const icon = document.getElementById('icon-' + stationId);
                        button.innerHTML = 'Supprimer des favoris';
                        icon.innerHTML = '⭐'; // Change l'icône en étoile pleine
                        button.setAttribute('onclick', 'removeFromFavorites(' + stationId + ')');
                    }
                    showMessage(data.message, data.type);
                })
                .catch(error => console.error('Erreur:', error));
        }

        //Supprimer la station en fonction de son id
        function removeFromFavorites(stationId) {
            fetch(`/user/remove-favorite/${stationId}`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.type === 'success') {
                        const button = document.getElementById('favorite-btn-' + stationId);
                        const icon = document.getElementById('icon-' + stationId);
                        button.innerHTML = 'Ajouter aux favoris';
                        icon.innerHTML = '☆'; // Change l'icône en étoile vide
                        button.setAttribute('onclick', 'addToFavorites(' + stationId + ')');
                    }
                    showMessage(data.message, data.type);
                })
                .catch(error => console.error('Erreur:', error));
        }

        //afficher message pour tous les cas
        function showMessage(message, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.style.display = 'block';
            messageDiv.innerText = message;
            messageDiv.style.backgroundColor = type === 'success' ? '#4CAF50' : '#f44336';
            messageDiv.style.color = 'white';
            setTimeout(() => messageDiv.style.display = 'none', 3000);
        }

        window.onload = initMap;

    </script>
{% endblock %}
